{"ast":null,"code":"var _jsxFileName = \"/home/dev/Az-Test-WS/az-react-examples/react-redux-http-example/src/components/UserContainer.js\";\nimport React, { userEffect } from 'react';\nimport { fetchUsers } from '../redux';\nimport { connect } from 'react-redux';\n\nfunction UserContainer({\n  userData,\n  fetchUsers\n}) {\n  //const  = props;\n  userEffect(() => {\n    fetchUsers();\n  }, []);\n  return userData.loading ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  }, \"Loading Data\") : userData.error ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 14\n    }\n  }, userData.error) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, \"User List:\"), userData && userData.users && userData.users.map(user => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 82\n    }\n  }, user.name)));\n} // Here component props will have an other proper and set from Redux-Store\n\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.user\n  };\n}; // Here component props will have 2nd additional props property from Redux dispatch for dispatching \n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer);","map":{"version":3,"sources":["/home/dev/Az-Test-WS/az-react-examples/react-redux-http-example/src/components/UserContainer.js"],"names":["React","userEffect","fetchUsers","connect","UserContainer","userData","loading","error","users","map","user","name","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,UAAR,QAAyB,UAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,SAASC,aAAT,CAAuB;AAACC,EAAAA,QAAD;AAAWH,EAAAA;AAAX,CAAvB,EAA+C;AAC3C;AACAD,EAAAA,UAAU,CAAC,MAAM;AACbC,IAAAA,UAAU;AACb,GAFS,EAEP,EAFO,CAAV;AAGA,SAAOG,QAAQ,CAACC,OAAT,gBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADE,GAECD,QAAQ,CAACE,KAAT,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,QAAQ,CAACE,KAAf,CADD,gBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAGQF,QAAQ,IAAIA,QAAQ,CAACG,KAArB,IAA8BH,QAAQ,CAACG,KAAT,CAAeC,GAAf,CAAmBC,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACC,IAAT,CAA3B,CAHtC,CALZ;AAYH,C,CACD;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,QAAQ,EAAEQ,KAAK,CAACH;AADb,GAAP;AAGH,CAJD,C,CAKA;;;AACA,MAAMI,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHb,IAAAA,UAAU,EAAE,MAAMa,QAAQ,CAACb,UAAU,EAAX;AADvB,GAAP;AAGH,CAJD;;AAKA,eAAeC,OAAO,CAACS,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CV,aAA5C,CAAf","sourcesContent":["import React, {userEffect} from 'react';\nimport {fetchUsers} from '../redux'\nimport {connect} from 'react-redux'\n\nfunction UserContainer({userData, fetchUsers}) {\n    //const  = props;\n    userEffect(() => {\n        fetchUsers();\n    }, [])\n    return userData.loading ? \n        (<h2>Loading Data</h2>): \n            userData.error ? \n            (<div>{userData.error}</div>) :\n            (\n                <div>\n                    <h2>User List:</h2>\n                    {\n                        userData && userData.users && userData.users.map(user => <p>{user.name}</p>)\n                    }\n                </div>\n            );\n}\n// Here component props will have an other proper and set from Redux-Store\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.user\n    }\n}\n// Here component props will have 2nd additional props property from Redux dispatch for dispatching \nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchUsers: () => dispatch(fetchUsers())    \n    }    \n}\nexport default connect(mapStateToProps,mapDispatchToProps)(UserContainer);\n"]},"metadata":{},"sourceType":"module"}